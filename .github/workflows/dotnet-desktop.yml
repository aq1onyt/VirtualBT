name: .NET Build & Publish EXE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: install Visual Studio UWP workload
      shell: pwsh
      run: |
        $vsInstallPath = (& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
        if (-not $vsInstallPath) {
          Write-Error "Visual Studio installation not found!"
          exit 1
        }
        $installerPath = Join-Path $vsInstallPath "Installer\vs_installer.exe"
        if (-Not (Test-Path $installerPath)) {
          Write-Error "vs_installer.exe not found at $installerPath"
          exit 1
        }

        Write-Host "Installing UWP workload..."
        & $installerPath modify --installPath $vsInstallPath --add Microsoft.VisualStudio.Workload.UniversalWindowsPlatform --passive --norestart

    - name: install Windows SDK 10.0 (optional but recommended)
      shell: pwsh
      run: |
        if (-not (Get-Command "winver" -ErrorAction SilentlyContinue)) {
          Write-Host "Windows SDK might not be installed, installing via Chocolatey..."
          choco install windows-sdk-10.1 -y
        } else {
          Write-Host "Windows SDK is already installed."
        }

    - name: verify workloads installed
      shell: pwsh
      run: |
        & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath | ForEach-Object {
          & "$_\Common7\Tools\VsDevCmd.bat" -arch=x64
          vswhere -products * -requires Microsoft.VisualStudio.Workload.UniversalWindowsPlatform -find
        }

    - name: build specific project (skip xaml junk)
      run: dotnet build BluetoothLEExplorer/BluetoothLEExplorer/VirtualBT.csproj --configuration Release --no-restore

    - name: publish EXE
      run: dotnet publish BluetoothLEExplorer/BluetoothLEExplorer/VirtualBT.csproj --configuration Release --output ./publish --no-restore

    - name: upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: VirtualBT-EXE
        path: ./publish
