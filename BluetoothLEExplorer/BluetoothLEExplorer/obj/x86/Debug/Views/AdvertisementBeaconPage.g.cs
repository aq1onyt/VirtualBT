#pragma checksum "E:\GitHub\VirtualBT\BluetoothLEExplorer\BluetoothLEExplorer\Views\AdvertisementBeaconPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "8FD38D6E2C81D6D6B4C969F4346B2E4B9A3AFED7D7C73637A4482E2B0E361507"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BluetoothLEExplorer.Views
{
    partial class AdvertisementBeaconPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AdvertisementBeaconPage_obj11_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAdvertisementBeaconPage_Bindings
        {
            private global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj13;
            private global::Windows.UI.Xaml.Controls.Button obj14;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj14Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12TextDisabled = false;
            private static bool isobj13IsOnDisabled = false;
            private static bool isobj13IsEnabledDisabled = false;

            private AdvertisementBeaconPage_obj11_BindingsTracking bindingsTracking;

            public AdvertisementBeaconPage_obj11_Bindings()
            {
                this.bindingsTracking = new AdvertisementBeaconPage_obj11_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 195 && columnNumber == 33)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 202 && columnNumber == 33)
                {
                    isobj13IsOnDisabled = true;
                }
                else if (lineNumber == 203 && columnNumber == 33)
                {
                    isobj13IsEnabledDisabled = true;
                }
                else if (lineNumber == 207 && columnNumber == 33)
                {
                    this.obj14.Click -= obj14Click;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // Views\AdvertisementBeaconPage.xaml line 185
                        this.obj11 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 12: // Views\AdvertisementBeaconPage.xaml line 193
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\AdvertisementBeaconPage.xaml line 198
                        this.obj13 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Views\AdvertisementBeaconPage.xaml line 204
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj14Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.Destroy();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj14Click;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj11.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAdvertisementBeaconPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon obj, int phase)
            {
                AdvertisementBeaconPage_obj11_Bindings bindings = this;
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsPublishing(obj.IsPublishing, phase);
                        this.Update_IsReady(obj.IsReady, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 193
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_IsPublishing(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 198
                    if (!isobj13IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj13, obj);
                    }
                }
            }
            private void Update_IsReady(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 198
                    if (!isobj13IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj13, obj);
                    }
                }
            }
            private void UpdateTwoWay_13_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.IsPublishing = this.obj13.IsOn;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AdvertisementBeaconPage_obj11_BindingsTracking
            {
                private global::System.WeakReference<AdvertisementBeaconPage_obj11_Bindings> weakRefToBindingObj; 

                public AdvertisementBeaconPage_obj11_BindingsTracking(AdvertisementBeaconPage_obj11_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AdvertisementBeaconPage_obj11_Bindings>(obj);
                }

                public AdvertisementBeaconPage_obj11_Bindings TryGetBindingObject()
                {
                    AdvertisementBeaconPage_obj11_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AdvertisementBeaconPage_obj11_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon obj = sender as global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_IsPublishing(obj.IsPublishing, DATA_CHANGED);
                                bindings.Update_IsReady(obj.IsReady, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsPublishing":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsPublishing(obj.IsPublishing, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsReady":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsReady(obj.IsReady, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon obj)
                {
                    AdvertisementBeaconPage_obj11_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void RegisterTwoWayListener_13(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_IsOn();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AdvertisementBeaconPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAdvertisementBeaconPage_Bindings
        {
            private global::BluetoothLEExplorer.Views.AdvertisementBeaconPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.GridView obj9;
            private global::Windows.UI.Xaml.Controls.Button obj16;
            private global::Windows.UI.Xaml.Controls.TextBox obj17;
            private global::Windows.UI.Xaml.Controls.TextBox obj18;
            private global::Windows.UI.Xaml.Controls.CheckBox obj19;
            private global::Windows.UI.Xaml.Controls.CheckBox obj20;
            private global::Windows.UI.Xaml.Controls.CheckBox obj21;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj22;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj23;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj24;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj22Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj23Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj24Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj9SelectedItemDisabled = false;
            private static bool isobj16CommandDisabled = false;
            private static bool isobj16CommandParameterDisabled = false;
            private static bool isobj16IsEnabledDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj19IsCheckedDisabled = false;
            private static bool isobj20IsCheckedDisabled = false;
            private static bool isobj21IsCheckedDisabled = false;

            private AdvertisementBeaconPage_obj1_BindingsTracking bindingsTracking;

            public AdvertisementBeaconPage_obj1_Bindings()
            {
                this.bindingsTracking = new AdvertisementBeaconPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 179 && columnNumber == 17)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 181 && columnNumber == 17)
                {
                    isobj9SelectedItemDisabled = true;
                }
                else if (lineNumber == 171 && columnNumber == 21)
                {
                    isobj16CommandDisabled = true;
                }
                else if (lineNumber == 172 && columnNumber == 21)
                {
                    isobj16CommandParameterDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 21)
                {
                    isobj16IsEnabledDisabled = true;
                }
                else if (lineNumber == 163 && columnNumber == 25)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 155 && columnNumber == 25)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 158 && columnNumber == 72)
                {
                    isobj19IsCheckedDisabled = true;
                }
                else if (lineNumber == 148 && columnNumber == 48)
                {
                    isobj20IsCheckedDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 48)
                {
                    isobj21IsCheckedDisabled = true;
                }
                else if (lineNumber == 126 && columnNumber == 31)
                {
                    this.obj22.Click -= obj22Click;
                }
                else if (lineNumber == 127 && columnNumber == 31)
                {
                    this.obj23.Click -= obj23Click;
                }
                else if (lineNumber == 128 && columnNumber == 31)
                {
                    this.obj24.Click -= obj24Click;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Views\AdvertisementBeaconPage.xaml line 177
                        this.obj9 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 16: // Views\AdvertisementBeaconPage.xaml line 169
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 17: // Views\AdvertisementBeaconPage.xaml line 162
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Views\AdvertisementBeaconPage.xaml line 152
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Views\AdvertisementBeaconPage.xaml line 158
                        this.obj19 = (global::Windows.UI.Xaml.Controls.CheckBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 20: // Views\AdvertisementBeaconPage.xaml line 148
                        this.obj20 = (global::Windows.UI.Xaml.Controls.CheckBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_20(this.obj20);
                        break;
                    case 21: // Views\AdvertisementBeaconPage.xaml line 144
                        this.obj21 = (global::Windows.UI.Xaml.Controls.CheckBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_21(this.obj21);
                        break;
                    case 22: // Views\AdvertisementBeaconPage.xaml line 126
                        this.obj22 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj22Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoSettings();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj22Click;
                        break;
                    case 23: // Views\AdvertisementBeaconPage.xaml line 127
                        this.obj23 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj23Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoPrivacy();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj23Click;
                        break;
                    case 24: // Views\AdvertisementBeaconPage.xaml line 128
                        this.obj24 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj24Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.GotoAbout();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj24Click;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAdvertisementBeaconPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::BluetoothLEExplorer.Views.AdvertisementBeaconPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::BluetoothLEExplorer.Views.AdvertisementBeaconPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                        this.Update_NewBeaconViewModel(obj.NewBeaconViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Beacons(obj.Beacons, phase);
                        this.Update_ViewModel_SelectedBeacon(obj.SelectedBeacon, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CreateBeaconCommand(obj.CreateBeaconCommand, phase);
                    }
                }
            }
            private void Update_ViewModel_Beacons(global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Beacons(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 177
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedBeacon(global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedBeacon(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 177
                    if (!isobj9SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CreateBeaconCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 169
                    if (!isobj16CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                    }
                }
            }
            private void Update_NewBeaconViewModel(global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageNewBeaconViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NewBeaconViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NewBeaconViewModel_IsValid(obj.IsValid, phase);
                        this.Update_NewBeaconViewModel_Payload(obj.Payload, phase);
                        this.Update_NewBeaconViewModel_PreferredTxPower(obj.PreferredTxPower, phase);
                        this.Update_NewBeaconViewModel_IncludeTxPower(obj.IncludeTxPower, phase);
                        this.Update_NewBeaconViewModel_IsAnonymous(obj.IsAnonymous, phase);
                        this.Update_NewBeaconViewModel_UseExtendedFormat(obj.UseExtendedFormat, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 169
                    if (!isobj16CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj16, obj, null);
                    }
                }
            }
            private void Update_NewBeaconViewModel_IsValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 169
                    if (!isobj16IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj16, obj);
                    }
                }
            }
            private void Update_NewBeaconViewModel_Payload(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 162
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_NewBeaconViewModel_PreferredTxPower(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 152
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj18, obj, null);
                    }
                }
            }
            private void Update_NewBeaconViewModel_IncludeTxPower(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 158
                    if (!isobj19IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj19, obj, null);
                    }
                }
            }
            private void Update_NewBeaconViewModel_IsAnonymous(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 148
                    if (!isobj20IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj20, obj, null);
                    }
                }
            }
            private void Update_NewBeaconViewModel_UseExtendedFormat(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AdvertisementBeaconPage.xaml line 144
                    if (!isobj21IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj21, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedBeacon = (global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon)this.obj9.SelectedItem;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NewBeaconViewModel != null)
                        {
                            this.dataRoot.NewBeaconViewModel.Payload = this.obj17.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NewBeaconViewModel != null)
                        {
                            this.dataRoot.NewBeaconViewModel.PreferredTxPower = this.obj18.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_19_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NewBeaconViewModel != null)
                        {
                            this.dataRoot.NewBeaconViewModel.IncludeTxPower = (global::System.Boolean)this.obj19.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NewBeaconViewModel != null)
                        {
                            this.dataRoot.NewBeaconViewModel.IsAnonymous = (global::System.Boolean)this.obj20.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_21_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.NewBeaconViewModel != null)
                        {
                            this.dataRoot.NewBeaconViewModel.UseExtendedFormat = (global::System.Boolean)this.obj21.IsChecked;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AdvertisementBeaconPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AdvertisementBeaconPage_obj1_Bindings> weakRefToBindingObj; 

                public AdvertisementBeaconPage_obj1_BindingsTracking(AdvertisementBeaconPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AdvertisementBeaconPage_obj1_Bindings>(obj);
                }

                public AdvertisementBeaconPage_obj1_Bindings TryGetBindingObject()
                {
                    AdvertisementBeaconPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Beacons(null);
                    UpdateChildListeners_ViewModel_SelectedBeacon(null);
                    UpdateChildListeners_NewBeaconViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AdvertisementBeaconPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageViewModel obj = sender as global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Beacons(obj.Beacons, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedBeacon(obj.SelectedBeacon, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Beacons":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Beacons(obj.Beacons, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedBeacon":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedBeacon(obj.SelectedBeacon, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Beacons(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AdvertisementBeaconPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Beacons(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AdvertisementBeaconPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon> cache_ViewModel_Beacons = null;
                public void UpdateChildListeners_ViewModel_Beacons(global::System.Collections.ObjectModel.ObservableCollection<global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon> obj)
                {
                    if (obj != cache_ViewModel_Beacons)
                    {
                        if (cache_ViewModel_Beacons != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Beacons).PropertyChanged -= PropertyChanged_ViewModel_Beacons;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Beacons).CollectionChanged -= CollectionChanged_ViewModel_Beacons;
                            cache_ViewModel_Beacons = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Beacons = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Beacons;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Beacons;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedBeacon(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AdvertisementBeaconPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon obj = sender as global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon cache_ViewModel_SelectedBeacon = null;
                public void UpdateChildListeners_ViewModel_SelectedBeacon(global::BluetoothLEExplorer.Models.ObservableBluetoothLEBeacon obj)
                {
                    if (obj != cache_ViewModel_SelectedBeacon)
                    {
                        if (cache_ViewModel_SelectedBeacon != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedBeacon).PropertyChanged -= PropertyChanged_ViewModel_SelectedBeacon;
                            cache_ViewModel_SelectedBeacon = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedBeacon = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedBeacon;
                        }
                    }
                }
                public void PropertyChanged_NewBeaconViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AdvertisementBeaconPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageNewBeaconViewModel obj = sender as global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageNewBeaconViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_NewBeaconViewModel_IsValid(obj.IsValid, DATA_CHANGED);
                                bindings.Update_NewBeaconViewModel_Payload(obj.Payload, DATA_CHANGED);
                                bindings.Update_NewBeaconViewModel_PreferredTxPower(obj.PreferredTxPower, DATA_CHANGED);
                                bindings.Update_NewBeaconViewModel_IncludeTxPower(obj.IncludeTxPower, DATA_CHANGED);
                                bindings.Update_NewBeaconViewModel_IsAnonymous(obj.IsAnonymous, DATA_CHANGED);
                                bindings.Update_NewBeaconViewModel_UseExtendedFormat(obj.UseExtendedFormat, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsValid":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewBeaconViewModel_IsValid(obj.IsValid, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Payload":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewBeaconViewModel_Payload(obj.Payload, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PreferredTxPower":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewBeaconViewModel_PreferredTxPower(obj.PreferredTxPower, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IncludeTxPower":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewBeaconViewModel_IncludeTxPower(obj.IncludeTxPower, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsAnonymous":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewBeaconViewModel_IsAnonymous(obj.IsAnonymous, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UseExtendedFormat":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewBeaconViewModel_UseExtendedFormat(obj.UseExtendedFormat, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageNewBeaconViewModel cache_NewBeaconViewModel = null;
                public void UpdateChildListeners_NewBeaconViewModel(global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageNewBeaconViewModel obj)
                {
                    if (obj != cache_NewBeaconViewModel)
                    {
                        if (cache_NewBeaconViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_NewBeaconViewModel).PropertyChanged -= PropertyChanged_NewBeaconViewModel;
                            cache_NewBeaconViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_NewBeaconViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_NewBeaconViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedItem();
                        }
                    });
                }
                public void RegisterTwoWayListener_17(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_18(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Windows.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_20(global::Windows.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_21(global::Windows.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_21_IsChecked();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\AdvertisementBeaconPage.xaml line 20
                {
                    this.ViewModel = (global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageViewModel)(target);
                }
                break;
            case 3: // Views\AdvertisementBeaconPage.xaml line 89
                {
                    this.AdaptiveVisualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 4: // Views\AdvertisementBeaconPage.xaml line 90
                {
                    this.VisualStateNarrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5: // Views\AdvertisementBeaconPage.xaml line 98
                {
                    this.VisualStateNormal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6: // Views\AdvertisementBeaconPage.xaml line 106
                {
                    this.VisualStateWide = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 7: // Views\AdvertisementBeaconPage.xaml line 117
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 8: // Views\AdvertisementBeaconPage.xaml line 138
                {
                    this.NewBeacon = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 15: // Views\AdvertisementBeaconPage.xaml line 140
                {
                    this.NewBeaconViewModel = (global::BluetoothLEExplorer.ViewModels.AdvertisementBeaconPageNewBeaconViewModel)(target);
                }
                break;
            case 17: // Views\AdvertisementBeaconPage.xaml line 162
                {
                    global::Windows.UI.Xaml.Controls.TextBox element17 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)element17).BeforeTextChanging += this.Payload_BeforeTextChanging;
                }
                break;
            case 18: // Views\AdvertisementBeaconPage.xaml line 152
                {
                    this.PreferredTxPower = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)this.PreferredTxPower).BeforeTextChanging += this.PreferredTxPower_BeforeTextChanging;
                }
                break;
            case 19: // Views\AdvertisementBeaconPage.xaml line 158
                {
                    this.IncludeTxPower = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\AdvertisementBeaconPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AdvertisementBeaconPage_obj1_Bindings bindings = new AdvertisementBeaconPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 11: // Views\AdvertisementBeaconPage.xaml line 185
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element11 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AdvertisementBeaconPage_obj11_Bindings bindings = new AdvertisementBeaconPage_obj11_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element11.DataContext);
                    element11.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element11, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element11, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

